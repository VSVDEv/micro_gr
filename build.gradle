plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.15'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'checkstyle'
    id 'pmd'
    id 'maven-publish'
}

group = 'vsvdev.co.ua'
version = '3'
def artifact = 'micro_gr'
archivesBaseName = artifact

java {
    sourceCompatibility = '11'
}

repositories {
    maven {
        url 'http://100.0.0.16:8081/repository/sv-group/'
	allowInsecureProtocol = true
        credentials {
            username = nexusUn
            password = nexusP
        }
    }
    // Other repositories can be added as needed
}




dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // https://mvnrepository.com/artifact/net.logstash.logback/logstash-logback-encoder
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '6.6'

}


checkstyle {
    toolVersion '10.3.3'
	configFile = file ("${project.rootDir}/config/checkstyle/checkstyle.xml")
}

pmd {
    consoleOutput = true
    toolVersion = "6.21.0"
    rulesMinimumPriority = 5
    ruleSetConfig =  project.resources.text.fromString(file("${rootDir}/config/pmd/rules.xml").text)
   // ruleSets = ["category/java/errorprone.xml", "category/java/bestpractices.xml"]
}

tasks.named('test') {
    useJUnitPlatform {
        filter {
            includeTestsMatching "*Test"
            excludeTestsMatching "*IT"
        }
    }
}

def integrationTest = tasks.register("integrationTest", Test) {
    useJUnitPlatform {
        filter {
            includeTestsMatching '*IT'
            includeTestsMatching 'IT*'
            includeTestsMatching '*ITCase'
        }
    }
}

tasks.named('check') {
    dependsOn integrationTest
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId artifact
            version project.version
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'micro-gradle'
                description = 'microservice'
                url = 'https://github.com/VSVDEv/micro_gr.git'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'VSVDev'
                        name = 'VSVDev'
                        email = 'vsvdev@ukr.net'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/VSVDEv/micro_gr.git'
                    developerConnection = 'scm:git:https://github.com/VSVDEv/micro_gr.git'
                    url = 'https://github.com/VSVDEv/micro_gr.git'
                }
            }
        }
    }

repositories {
        maven {
             name = "sv"
            url = uri("http://100.0.0.16:8081/repository/sv/")
	    allowInsecureProtocol = true
            credentials {
                username = nexusUn
                password = nexusP
            }
        }
    }
}
    
