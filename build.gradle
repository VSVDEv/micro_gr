plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.15'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'checkstyle'
    id 'pmd'
    id 'maven-publish'
}

group = 'vsvdev.co.ua'
version = '2'

java {
    sourceCompatibility = '11'
}


    repositories {
    maven {
	    repository(url: "http://100.0.0.16:8081/repository/sv-group/") {
             authentication(userName: "jenk", password: "123")
}
    }
}



dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // https://mvnrepository.com/artifact/net.logstash.logback/logstash-logback-encoder
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '6.6'

}


checkstyle {
    toolVersion '10.3.3'
	configFile = file ("${project.rootDir}/config/checkstyle/checkstyle.xml")
}

pmd {
    consoleOutput = true
    toolVersion = "6.21.0"
    rulesMinimumPriority = 5
    ruleSetConfig =  project.resources.text.fromString(file("${rootDir}/config/pmd/rules.xml").text)
   // ruleSets = ["category/java/errorprone.xml", "category/java/bestpractices.xml"]
}

tasks.named('test') {
    useJUnitPlatform {
        filter {
            includeTestsMatching "*Test"
            excludeTestsMatching "*IT"
        }
    }
}

def integrationTest = tasks.register("integrationTest", Test) {
    useJUnitPlatform {
        filter {
            includeTestsMatching '*IT'
            includeTestsMatching 'IT*'
            includeTestsMatching '*ITCase'
        }
    }
}

tasks.named('check') {
    dependsOn integrationTest
}



publishing {
    publications {
        release(MavenPublication) {
            groupId = "vsvdev.co.ua"
            artifactId = "micro"
            version = "$version"

            afterEvaluate {
                from components.release
            }

            pom {
                developers {
                    developer {
                        id = 'vsvdev'
                        name = 'vsvdev'
                        email = 'vsvdev@'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = "sv"
            url = uri("http://100.0.0.16:8081/repository/sv/")
            credentials {
                username = "jenk"
                password = "123"
            }
        }
    }
}
